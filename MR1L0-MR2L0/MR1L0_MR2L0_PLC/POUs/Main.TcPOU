<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="Main" Id="{371c560d-bfd7-44d3-85a8-59ca1fa1938a}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	// Axes for each system
	// M1L0
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Yup]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Yup]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_YUP_AXIS
	'}
	M1 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Yup
	fbMotionStage_m1 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Ydwn]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Ydwn]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_YDWN_AXIS
	'}
	M2 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Ydwn
	fbMotionStage_m2 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Xup]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Xup]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_XUP_AXIS
	'}
	M3 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Xup
	fbMotionStage_m3 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Xdwn]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Xdwn]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_XDWN_AXIS
	'}
	M4 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Xdwn
	fbMotionStage_m4 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Pitch]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Pitch]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_PITCH_AXIS
	'}
	M5 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // PitchCoarse
	fbMotionStage_m5 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M1L0_ES7041-1000_Bender]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M1L0_ES7041-1000_Bender]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0_BENDER_AXIS
	'}
	M6 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Bender
	fbMotionStage_m6 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.fbRunHOMS.bSTOEnable:=TIIB[M1L0_EL1004]^Channel 1^Input'} // No idea if this will work
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M1L0
	'}
	M1L0 : DUT_HOMS;

	// M2L0
	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Yup]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Yup]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_YUP_AXIS
	'}
	M7 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Yup
	fbMotionStage_m7 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Ydwn]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Ydwn]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_YDWN_AXIS
	'}
	M8 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Ydwn
	fbMotionStage_m8 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Xup]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Xup]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_XUP_AXIS
	'}
	M9 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Xup
	fbMotionStage_m9 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Xdwn]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Xdwn]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_XDWN_AXIS
	'}
	M10 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Xdwn
	fbMotionStage_m10 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Pitch]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Pitch]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_PITCH_AXIS
	'}
	M11 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // PitchCoarse
	fbMotionStage_m11 : FB_MotionStage;

	{attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[M2L0_ES7041-1000_Bender]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[M2L0_ES7041-1000_Bender]^STM Status^Status^Digital input 2'}
	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0_BENDER_AXIS
	'}
	M12 : DUT_MotionStage:=(nCommand:=ENUM_EpicsMotorCmd.EPICS_MOTOR_MOVE_ABS); // Bender
	fbMotionStage_m12 : FB_MotionStage;

	{attribute 'pytmc' := '
		pv: TEST:MAIN:M2L0
	'}
	M2L0 : DUT_HOMS;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// M1L0
M1L0.fbRunHOMS(stYup:=M1,
               stYdwn:=M2,
               stXup:=M3,
               stXdwn:=M4,
               stPitch:=M5,
               stBender:=M6,
	           nYupEncRef:=GVL_M1L0.nYUP_ENC_REF,
               nYdwnEncRef:=GVL_M1L0.nYDWN_ENC_REF,
               nXupEncRef:=GVL_M1L0.nXUP_ENC_REF,
               nXdwnEncRef:=GVL_M1L0.nXDWN_ENC_REF,
			   bExecuteCoupleY:=M1L0.bExecuteCoupleY,
               bExecuteCoupleX:=M1L0.bExecuteCoupleX,
			   bExecuteDecoupleY:=M1L0.bExecuteDecoupleY,
               bExecuteDecoupleX:=M1L0.bExecuteDecoupleX,
               bGantryAlreadyCoupledY=>M1L0.bGantryAlreadyCoupledY,
               bGantryAlreadyCoupledX=>M1L0.bGantryAlreadyCoupledX,
               nCurrGantryY=>M1L0.nCurrGantryY,
               nCurrGantryX=>M1L0.nCurrGantryX);

fbMotionStage_m1(stMotionStage:=M1);
fbMotionStage_m2(stMotionStage:=M2);
fbMotionStage_m3(stMotionStage:=M3);
fbMotionStage_m4(stMotionStage:=M4);
fbMotionStage_m5(stMotionStage:=M5);
fbMotionStage_m6(stMotionStage:=M6);

// M2L0
M2L0.fbRunHOMS(stYup:=M7,
               stYdwn:=M8,
               stXup:=M9,
               stXdwn:=M10,
               stPitch:=M11,
               stBender:=M12,
	           nYupEncRef:=GVL_M2L0.nYUP_ENC_REF,
               nYdwnEncRef:=GVL_M2L0.nYDWN_ENC_REF,
               nXupEncRef:=GVL_M2L0.nXUP_ENC_REF,
               nXdwnEncRef:=GVL_M2L0.nXDWN_ENC_REF,
			   bExecuteCoupleY:=M2L0.bExecuteCoupleY,
               bExecuteCoupleX:=M2L0.bExecuteCoupleX,
			   bExecuteDecoupleY:=M2L0.bExecuteDecoupleY,
               bExecuteDecoupleX:=M2L0.bExecuteDecoupleX,
               bGantryAlreadyCoupledY=>M2L0.bGantryAlreadyCoupledY,
               bGantryAlreadyCoupledX=>M2L0.bGantryAlreadyCoupledX,
               nCurrGantryY=>M2L0.nCurrGantryY,
               nCurrGantryX=>M2L0.nCurrGantryX);

fbMotionStage_m7(stMotionStage:=M7);
fbMotionStage_m8(stMotionStage:=M8);
fbMotionStage_m9(stMotionStage:=M9);
fbMotionStage_m10(stMotionStage:=M10);
fbMotionStage_m11(stMotionStage:=M11);
fbMotionStage_m12(stMotionStage:=M12);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>