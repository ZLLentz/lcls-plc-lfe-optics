<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="Main" Id="{371c560d-bfd7-44d3-85a8-59ca1fa1938a}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	(*
	// M1L0
	{attribute 'TcLinkTo' := '.fbRunHOMS.bSTOEnable1:=TIIB[EL1004_M1L0_STO]^Channel 1^Input;
                              .fbRunHOMS.bSTOEnable2:=TIIB[EL1004_M1L0_STO]^Channel 2^Input;
	                          .fbRunHOMS.stYupEnc.Count:=TIIB[EL5042_M1L0_Yupdwn]^FB Inputs Channel 1^Position;
	                          .fbRunHOMS.stYdwnEnc.Count:=TIIB[EL5042_M1L0_Yupdwn]^FB Inputs Channel 2^Position;
	                          .fbRunHOMS.stXupEnc.Count:=TIIB[EL5042_M1L0_Xupdwn]^FB Inputs Channel 1^Position;
	                          .fbRunHOMS.stXdwnEnc.Count:=TIIB[EL5042_M1L0_Xupdwn]^FB Inputs Channel 2^Position'}
	{attribute 'pytmc' := '
		pv: MR1L0:LFE
	'}
	M1L0 : DUT_HOMS;

	// RMS Error:
	fbPitchRMSErrorM1L0 : FB_RMSWatch;
	fMaxPitchRMSErrorM1L0 : LREAL;
	fMinPitchRMSErrorM1L0 : LREAL;

	// Pitch Control
	fbM1L0PitchControl : FB_PitchControl;
	bM1L0PitchDone : BOOL;
	bM1L0PitchBusy : BOOL;
	*)

	// M2L0
	{attribute 'TcLinkTo' := '.fbRunHOMS.bSTOEnable1:=TIIB[EL1004_M2L0_STO]^Channel 1^Input;
	                          .fbRunHOMS.bSTOEnable2:=TIIB[EL1004_M2L0_STO]^Channel 2^Input;
	                          .fbRunHOMS.stYupEnc.Count:=TIIB[EL5042_M2L0_Yupdwn]^FB Inputs Channel 1^Position;
	                          .fbRunHOMS.stYdwnEnc.Count:=TIIB[EL5042_M2L0_Yupdwn]^FB Inputs Channel 2^Position;
	                          .fbRunHOMS.stXupEnc.Count:=TIIB[EL5042_M2L0_Xupdwn]^FB Inputs Channel 1^Position;
	                          .fbRunHOMS.stXdwnEnc.Count:=TIIB[EL5042_M2L0_Xupdwn]^FB Inputs Channel 2^Position'}
	{attribute 'pytmc' := '
		pv: MR2L0:LFE
	'}
	M2L0 : DUT_HOMS;

	// RMS Error:
	fbPitchRMSErrorM2L0 : FB_RMSWatch;
	fMaxPitchRMSErrorM2L0 : LREAL;
	fMinPitchRMSErrorM2L0 : LREAL;

	// Pitch Control
	fbM2L0PitchControl : FB_PitchControl;
	bM2L0PitchDone : BOOL;
	bM2L0PitchBusy : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
// M1L0
M1L0.fbRunHOMS(stYup:=GVL_M1L0.M1,
               stYdwn:=GVL_M1L0.M2,
               stXup:=GVL_M1L0.M3,
               stXdwn:=GVL_M1L0.M4,
               stPitch:=GVL_M1L0.M1L0_Pitch,
               stBender:=GVL_M1L0.M6,
	           nYupEncRef:=GVL_M1L0_Constants.nYUP_ENC_REF,
               nYdwnEncRef:=GVL_M1L0_Constants.nYDWN_ENC_REF,
               nXupEncRef:=GVL_M1L0_Constants.nXUP_ENC_REF,
               nXdwnEncRef:=GVL_M1L0_Constants.nXDWN_ENC_REF,
			   bExecuteCoupleY:=M1L0.bExecuteCoupleY,
               bExecuteCoupleX:=M1L0.bExecuteCoupleX,
			   bExecuteDecoupleY:=M1L0.bExecuteDecoupleY,
               bExecuteDecoupleX:=M1L0.bExecuteDecoupleX,
               bGantryAlreadyCoupledY=>M1L0.bGantryAlreadyCoupledY,
               bGantryAlreadyCoupledX=>M1L0.bGantryAlreadyCoupledX,
               nCurrGantryY=>M1L0.nCurrGantryY,
               nCurrGantryX=>M1L0.nCurrGantryX);

// Convert nCurrGantry to um (smaller number) to read out in epics
M1L0.fCurrGantryY_um := LINT_TO_REAL(M1L0.nCurrGantryY) / 1000.0;
M1L0.fCurrGantryX_um := LINT_TO_REAL(M1L0.nCurrGantryX) / 1000.0;

// FB_MotionStage's for non-piezo axes
GVL_M1L0.fbMotionStage_m1(stMotionStage:=GVL_M1L0.M1);
GVL_M1L0.fbMotionStage_m2(stMotionStage:=GVL_M1L0.M2);
GVL_M1L0.fbMotionStage_m3(stMotionStage:=GVL_M1L0.M3);
GVL_M1L0.fbMotionStage_m4(stMotionStage:=GVL_M1L0.M4);
GVL_M1L0.fbMotionStage_m6(stMotionStage:=GVL_M1L0.M6);

// Calculate Pitch RMS Error:
fbPitchRMSErrorM1L0(stMotionStage:=GVL_M1L0.M1L0_Pitch.Stepper,
	                fMaxRMSError=>fMaxPitchRMSErrorM1L0,
					fMinRMSError=>fMinPitchRMSErrorM1L0);

// Pitch Control
GVL_M1L0.M1L0_Pitch.Stepper.fVelocity := 150.0;
fbM1L0PitchControl(Pitch:=GVL_M1L0.M1L0_Pitch,
                   q_bDone=>bM1L0PitchDone,
                   q_bBusy=>bM1L0PitchBusy);
*)
// M2L0
M2L0.fbRunHOMS(stYup:=GVL_M2L0.M7,
               stYdwn:=GVL_M2L0.M8,
               stXup:=GVL_M2L0.M9,
               stXdwn:=GVL_M2L0.M10,
			   stPitch:=GVL_M2L0.M2L0_Pitch,
               stBender:=GVL_M2L0.M12,
	           nYupEncRef:=GVL_M2L0_Constants.nYUP_ENC_REF,
               nYdwnEncRef:=GVL_M2L0_Constants.nYDWN_ENC_REF,
               nXupEncRef:=GVL_M2L0_Constants.nXUP_ENC_REF,
               nXdwnEncRef:=GVL_M2L0_Constants.nXDWN_ENC_REF,
			   bExecuteCoupleY:=M2L0.bExecuteCoupleY,
               bExecuteCoupleX:=M2L0.bExecuteCoupleX,
			   bExecuteDecoupleY:=M2L0.bExecuteDecoupleY,
               bExecuteDecoupleX:=M2L0.bExecuteDecoupleX,
               bGantryAlreadyCoupledY=>M2L0.bGantryAlreadyCoupledY,
               bGantryAlreadyCoupledX=>M2L0.bGantryAlreadyCoupledX,
               nCurrGantryY=>M2L0.nCurrGantryY,
               nCurrGantryX=>M2L0.nCurrGantryX);

// Convert nCurrGantry to um (smaller number) to read out in epics
M2L0.fCurrGantryY_um := LINT_TO_REAL(M2L0.nCurrGantryY) / 1000;
M2L0.fCurrGantryX_um := LINT_TO_REAL(M2L0.nCurrGantryX) / 1000;

// FB_MotionStage's for non-piezo axes
GVL_M2L0.fbMotionStage_m7(stMotionStage:=GVL_M2L0.M7);
GVL_M2L0.fbMotionStage_m8(stMotionStage:=GVL_M2L0.M8);
GVL_M2L0.fbMotionStage_m9(stMotionStage:=GVL_M2L0.M9);
GVL_M2L0.fbMotionStage_m10(stMotionStage:=GVL_M2L0.M10);
GVL_M2L0.fbMotionStage_m12(stMotionStage:=GVL_M2L0.M12);

// Calculate Pitch RMS Error:
fbPitchRMSErrorM2L0(stMotionStage:=GVL_M2L0.M2L0_Pitch.Stepper,
	                fMaxRMSError=>fMaxPitchRMSErrorM2L0,
					fMinRMSError=>fMinPitchRMSErrorM2L0);

// Pitch Control
GVL_M2L0.M2L0_Pitch.Stepper.fVelocity := 150.0;
fbM2L0PitchControl(Pitch:=GVL_M2L0.M2L0_Pitch,
                   q_bDone=>bM2L0PitchDone,
                   q_bBusy=>bM2L0PitchBusy);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>